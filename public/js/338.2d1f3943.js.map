{"version":3,"file":"js/338.2d1f3943.js","mappings":"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","sources":["webpack://frontend/./src/libs/vuex.js","webpack://frontend/./src/views/partials/math-crush/animation.js","webpack://frontend/./src/views/partials/math-crush/game-helpers.js","webpack://frontend/./src/components/misc/grid.vue","webpack://frontend/./src/components/misc/grid.vue?2dc8","webpack://frontend/./src/views/partials/math-crush/game-layout.vue","webpack://frontend/./src/views/partials/math-crush/game-layout.vue?bacc","webpack://frontend/./src/components/misc/loading.vue","webpack://frontend/./src/components/misc/loading.vue?2ef6","webpack://frontend/./src/components/cards/hints-card.vue","webpack://frontend/./src/components/cards/hints-card.vue?2b22","webpack://frontend/./src/components/misc/game-header.vue","webpack://frontend/./src/components/misc/game-header.vue?9705","webpack://frontend/./src/views/partials/math-crush/main-layout.vue","webpack://frontend/./src/views/partials/math-crush/main-layout.vue?6cac"],"sourcesContent":["import { computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst mapState = () => {\r\n  const store = useStore()\r\n  return Object.fromEntries(\r\n    Object.keys(store.state).map(\r\n      key => [key, computed(() => store.state[key])]\r\n    )\r\n  )\r\n}\r\n\r\nconst mapGetters = () => {\r\n  const store = useStore()\r\n  return Object.fromEntries(\r\n    Object.keys(store.getters).map(\r\n      getter => [getter, computed(() => store.getters[getter])]\r\n    )\r\n  )\r\n}\r\n\r\nconst mapMutations = () => {\r\n  const store = useStore()\r\n  return Object.fromEntries(\r\n    Object.keys(store._mutations).map(\r\n      mutation => [mutation, value => store.commit(mutation, value)]\r\n    )\r\n  )\r\n}\r\n\r\nconst mapActions = () => {\r\n  const store = useStore()\r\n  return Object.fromEntries(\r\n    Object.keys(store._actions).map(\r\n      action => [action, value => store.dispatch(action, value)]\r\n    )\r\n  )\r\n}\r\n\r\nexport { mapState, mapGetters, mapMutations, mapActions }","import sound from './sound'\r\n\r\nconst growAndExplode = async (tiles) => {\r\n  const transition =  anime.timeline({\r\n    targets: [...tiles],\r\n    easing: 'easeInSine',\r\n  })\r\n\r\n  transition.add({\r\n    scale: 1.3,\r\n    duration: 700,\r\n    complete: () => {\r\n      sound.explode.play()\r\n      tiles.forEach(tile => {\r\n        tile.removeAttribute('class')\r\n        tile.classList.add('coin', 'bomb') \r\n      })\r\n    }\r\n  })\r\n\r\n  transition.add({\r\n    duration: 700,\r\n    complete: () => {\r\n      tiles.forEach(tile => {\r\n        tile.classList.add('invisible')\r\n        tile.removeAttribute('style')\r\n      })\r\n    }\r\n  })\r\n\r\n  await transition.finished\r\n}\r\n\r\n\r\nconst drop = async tiles => {\r\n  const height = document.querySelector('.tile-container').getBoundingClientRect().height;\r\n\r\n  await Promise.all(tiles.map(async tile => {\r\n    const down = tile.dataset.down\r\n\r\n    const transition =  anime.timeline({\r\n      duration: 500,\r\n      direction: 'normal',\r\n      easing: 'easeInSine',\r\n    })\r\n    \r\n    transition.add({\r\n      targets: tile,\r\n      endDelay: 200,\r\n      translateY: height*down\r\n    })\r\n\r\n    await transition.finished\r\n  }))\r\n}\r\n\r\n\r\n\r\n\r\nconst grow = async tiles => {\r\n  const transition = anime.timeline({\r\n    targets: [...tiles],\r\n    direction: 'normal',\r\n    easing: 'linear',\r\n  })\r\n\r\n  transition.add({ \r\n    scale: 0,\r\n    delay: 180,\r\n    duration: 0,\r\n  })\r\n\r\n  transition.add({\r\n    scale: 1,\r\n    // rotate: '+=1turn',\r\n    duration: 200,\r\n    begin: () => tiles.forEach(tile => tile.classList.remove('invisible'))\r\n  })\r\n\r\n  await transition.finished\r\n}\r\n\r\nconst shrinkAndRotate = async tiles => {\r\n\r\n  const transition = anime.timeline({\r\n    targets: [...tiles],\r\n    direction: 'normal',\r\n    easing: 'linear',\r\n  })\r\n\r\n  transition.add({ \r\n    rotate: '+=1turn',\r\n    scale: 0,\r\n    duration: 700,\r\n    delay: 300,\r\n    complete: () => {\r\n      tiles.forEach(tile => {\r\n        tile.classList.add('invisible')\r\n        tile.removeAttribute('style')\r\n      })\r\n    }\r\n  })\r\n  await transition.finished\r\n}\r\n\r\n\r\nconst swap = async tiles =>{\r\n  tiles.source.square.parentElement.classList.remove('selected')\r\n  const width = document.querySelector('.coin').parentElement.getBoundingClientRect().width;\r\n  const height = document.querySelector('.coin').parentElement.getBoundingClientRect().height;\r\n\r\n  if(tiles.dest.id === (tiles.source.id-8)) await slideUp(height, tiles)\r\n  else if(tiles.dest.id === (tiles.source.id-1)) await slideLeft(width, tiles)\r\n  else if(tiles.dest.id === (tiles.source.id+1)) await slideRight(width, tiles)\r\n  else if(tiles.dest.id === (tiles.source.id+8)) await slideDown(height, tiles)\r\n}\r\n\r\n\r\nconst slideUp = async (distance, tiles) =>{\r\n  const transition = anime.timeline({\r\n    duration: 500,\r\n    easing: 'easeInSine',\r\n    direction: (tiles.alternate) ? 'alternate' : 'normal'\r\n  })\r\n\r\n  transition.add({\r\n    translateY: -distance,\r\n    targets: tiles.source.square\r\n  })\r\n\r\n  transition.add({\r\n    translateY: distance,\r\n    targets: tiles.dest.square\r\n  },0)\r\n\r\n  await transition.finished\r\n}\r\n\r\n\r\nconst slideDown = async (distance, tiles) =>{\r\n  const transition = anime.timeline({\r\n    duration: 500,\r\n    easing: 'easeInSine',\r\n    direction: (tiles.alternate) ? 'alternate' : 'normal'\r\n  })\r\n\r\n  transition.add({\r\n    translateY: distance,\r\n    targets: tiles.source.square\r\n  })\r\n\r\n  transition.add({\r\n    translateY: -distance,\r\n    targets: tiles.dest.square\r\n  },0)\r\n\r\n  await transition.finished\r\n}\r\n\r\n\r\n\r\n\r\nconst slideLeft = async (distance, tiles) =>{\r\n  const transition = anime.timeline({\r\n    duration: 500,\r\n    easing: 'easeInSine',\r\n    direction: (tiles.alternate) ? 'alternate' : 'normal'\r\n  })\r\n\r\n  transition.add({\r\n    translateX: -distance,\r\n    targets: tiles.source.square\r\n  })\r\n\r\n  transition.add({\r\n    translateX: distance,\r\n    targets: tiles.dest.square\r\n  },0)\r\n\r\n  await transition.finished\r\n}\r\n\r\n\r\n\r\nconst slideRight = async (distance, tiles) =>{\r\n  const transition = anime.timeline({\r\n    duration: 500,\r\n    easing: 'easeInSine',\r\n    direction: (tiles.alternate) ? 'alternate' : 'normal'\r\n  })\r\n\r\n  transition.add({\r\n    translateX: distance,\r\n    targets: tiles.source.square\r\n  })\r\n\r\n  transition.add({\r\n    translateX: -distance,\r\n    targets: tiles.dest.square\r\n  },0)\r\n\r\n  await transition.finished\r\n}\r\n\r\n\r\nconst animation = {swap, drop, growAndExplode, grow, shrinkAndRotate}\r\nexport default animation\r\n","import sound from './sound'\r\nimport store from '@/store/index'\r\nimport animation from  './animation'\r\n\r\nlet intervalID\r\nlet matchFound = false\r\n\r\n\r\n\r\n\r\nconst tiles = {\r\n  alternate: true,\r\n  dest: {square: null, id:null },\r\n  source: {square: null, id:null},\r\n}\r\n\r\nconst invalidMove = tiles => {\r\n  sound.badMove.play()\r\n  tiles.source.square.parentElement.classList.remove('selected')\r\n  tiles.source.square = tiles.dest.square\r\n  tiles.source.square.parentElement.classList.add('selected')\r\n  tiles.source.id = tiles.dest.id\r\n  tiles.dest.id = null\r\n  tiles.dest.square = null\r\n}\r\n\r\nconst swapAmount = tiles => {\r\n  const temp = tiles.source.square.dataset.amount\r\n  tiles.source.square.dataset.amount = tiles.dest.square.dataset.amount\r\n  tiles.dest.square.dataset.amount = temp\r\n}\r\n\r\nconst swapImg = tiles => {\r\n  const dest = tiles.dest.square\r\n  const source = tiles.source.square\r\n  const destClass =  dest.classList[1]\r\n  const sourceClass = source.classList[1]\r\n\r\n  source.removeAttribute('style')\r\n  source.parentElement.removeAttribute('style')\r\n  source.parentElement.classList.remove('selected')\r\n  source.classList.replace(sourceClass, destClass)\r\n  \r\n  dest.removeAttribute('style')\r\n  dest.parentElement.removeAttribute('style')\r\n  dest.classList.replace(destClass, sourceClass)\r\n}\r\n\r\n\r\nconst setTiles = square => {\r\n  const destID = parseInt(square.getAttribute('id'))\r\n  if(tiles.source.square !== null && tiles.dest.square === null && tiles.source.square !== square ){\r\n    tiles.dest.id = destID\r\n    tiles.dest.square = square\r\n    validMoves()\r\n  }else return\r\n}\r\n\r\nconst validMoves = async() => {\r\n  store.commit('madeFirstMove', true)\r\n  let moves = [tiles.source.id - 1, tiles.source.id + 1, tiles.source.id+ 8, tiles.source.id - 8]\r\n  let valid = moves.includes(tiles.dest.id)\r\n  if(valid)swapTiles()\r\n  else invalidMove(tiles)\r\n}\r\n\r\nconst checkForMatch  = async () => {\r\n  if(!store.state.crush.pause)while(findMatch()){await animateFound()}\r\n}\r\n\r\nconst lvlInfo = () => {\r\n  const currentLvl = store.getters.getCrushState('currentLvL')\r\n  const levels = store.getters.getCrushState('levels')\r\n  return levels[currentLvl-1]\r\n}\r\n\r\nconst add = tiles =>{  \r\n  let total = 0\r\n  const data = lvlInfo()\r\n  const grid = store.getters.getCrushState('grid')\r\n  tiles.forEach(index => total+= parseInt(grid[index].dataset.amount))\r\n\r\n  if(total === data.target)addPoints(tiles, grid)\r\n}\r\n\r\n\r\nconst addPoints =  (streak, grid) => {\r\n  streak.forEach(id => {\r\n    grid[id].dataset.amount = 0\r\n    grid[id].classList.add('marked')\r\n  })\r\n\r\n  store.commit('increaseCombo')\r\n  matchFound = true\r\n}\r\n\r\nconst getTilesByClassName = (className, reverse = false, arr = []) => {\r\n  const tiles = document.getElementsByClassName(className)\r\n  Array.from(tiles).forEach(tile => arr.push(tile))\r\n  if(reverse)arr.reverse()\r\n  return arr\r\n}\r\n\r\nconst updateClass = tiles => {\r\n  tiles.forEach(tile => {\r\n    tile.removeAttribute('class')\r\n    tile.classList.add(...switchClassName(tile.dataset.amount))\r\n  })\r\n}\r\n\r\nexport const switchClassName = className => {\r\n  let css = ''\r\n  switch(parseInt(className)) {\r\n    case 5:\r\n      css = ['coin', 'five']\r\n      break\r\n    case 10:\r\n      css = ['coin', 'ten']\r\n      break\r\n    case 20:\r\n      css = ['coin', 'twenty']\r\n      break\r\n    case 50:\r\n      css = ['coin', 'fifty']\r\n      break\r\n    case 100:\r\n      css = ['coin', 'one-hundred']\r\n      break\r\n    case 500:\r\n      css = ['coin', 'five-hundred']\r\n      break\r\n    default:\r\n      css = ['coin', 'bg-dark']\r\n      break\r\n  }\r\n  return css\r\n}\r\n\r\n\r\nconst resetTiles = tiles => {\r\n  tiles.source.square = tiles.source.id = null\r\n  tiles.dest.square = tiles.dest.id = null\r\n  tiles.alternate = true\r\n}\r\n\r\nconst removeAnimation = tiles => {\r\n  tiles.forEach(tile => {\r\n    tile.removeAttribute('style')\r\n    tile.removeAttribute('data-down')\r\n    addHoverCss() \r\n  })\r\n}\r\n\r\nconst addHoverCss = () => {\r\n  const tiles = document.getElementsByClassName('tile-container')\r\n  Array.from(tiles).forEach(tile =>tile.classList.add('hvr-grow'))\r\n}\r\n\r\n/**\r\n* @param {object} game contains current information like number of points awarded, lvl, & target to match\r\n* @desc loops through the grid and finds any pair of 3 that matches the target value\r\n* @return {boolean} if points is greater than 0 return TRUE else return FALSE                    \r\n**/\r\nconst findMatch = () => {\r\n  matchFound =false\r\n  for(let i=0; i<62; i++){\r\n\r\n    const threeRows = [      6, 7,         14, 15,        22, 23,         30, 31,         38, 39,         46, 47,         54, 55]\r\n    const fourRows =  [   5, 6, 7,     13, 14, 15,    21, 22, 23,     29, 30, 31,     37, 38, 39,     45, 46, 47,     53, 54, 55,     61, 62, 63]\r\n    const fiveRows =  [4, 5, 6, 7, 12, 13, 14, 15, 20,21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]\r\n\r\n\r\n    if(i<48)add([i, i+8, i+8*2])\r\n    if(i<40)add([i, i+8, i+8*2, i+8*3])\r\n    if(i<32)add([i, i+8, i+8*2, i+8*3,i+8*4])\r\n\r\n    if(threeRows.includes(i)) continue\r\n    add([i, i+1, i+2])\r\n\r\n    if(fourRows.includes(i)) continue\r\n    add([i, i+1, i+2, i+3])\r\n\r\n    if(fiveRows.includes(i)) continue\r\n    add([i, i+1, i+2, i+3, i+4])\r\n  }\r\n\r\n  return matchFound\r\n}\r\n\r\n\r\nconst animateFound = async () => {\r\n  const grid = store.getters.getCrushState('grid')\r\n  const markedArr = getTilesByClassName('marked', true)\r\n  const [replaceArr, validArr] = markedTiles(markedArr, grid)\r\n  await animation.growAndExplode(markedArr)\r\n  await animation.drop(validArr)\r\n  sound.drop.play()\r\n\r\n  updateTilesAmount(replaceArr, grid)\r\n  const updateArr = getTilesByClassName('update', false)\r\n  const invalidArr = getTilesByClassName('replace', false)\r\n  updateClass(updateArr)\r\n  createTiles(invalidArr, true)\r\n  validArr.forEach(tile => tile.removeAttribute('style'))\r\n\r\n  await animation.grow(invalidArr)\r\n  sound.wellDone.play()\r\n  store.commit('increaseGameTime')\r\n  store.commit('increasePoints')\r\n  removeAnimation(replaceArr)\r\n}\r\n\r\n\r\nconst markedTiles = (tiles, grid) => {\r\n  let validArr = [], replaceArr = []\r\n  tiles.forEach(tile => {\r\n    let ID = parseInt(tile.getAttribute('id'))\r\n    while(ID >= 0){\r\n      replaceArr.push(grid[ID])\r\n      if(parseInt(grid[ID].dataset.amount) > 0)validArr.push(grid[ID])\r\n      ID -=8\r\n    }\r\n  })\r\n  \r\n  replaceArr = [...new Set(replaceArr)] //remove duplicates tiles\r\n  validArr = [...new Set(validArr)]    //remove duplicates tiles\r\n  calculateDown(validArr, grid)\r\n  return [replaceArr, validArr]\r\n}\r\n\r\n\r\nconst calculateDown = (tiles, grid) => {\r\n  tiles.forEach(tile => {\r\n    let down = 0, tileID = parseInt(tile.getAttribute('id'))\r\n    while(tileID < 64){\r\n      const tileValue = parseInt(grid[tileID].dataset.amount)\r\n      if(tileValue === 0)down++\r\n      tileID += 8\r\n    }\r\n    tile.setAttribute('data-down', down)\r\n  })\r\n}\r\n\r\n\r\nconst updateTilesAmount = (tiles, grid) => {\r\n  const gridTop = [0,1,2,3,4,5,6,7]\r\n  tiles.forEach(tile => {\r\n    const tileID = parseInt(tile.getAttribute('id'))\r\n    let currentID = tileID\r\n    while(currentID >= 0){\r\n      currentID -= 8\r\n      if(gridTop.includes(tileID) || currentID < 0){    //reach the top || gone out of bounce\r\n        tile.classList.add('replace') \r\n        break\r\n      }\r\n      if(parseInt(grid[currentID].dataset.amount) > 0){\r\n        tile.dataset.amount = grid[currentID].dataset.amount\r\n        grid[currentID].dataset.amount = 0\r\n        tile.classList.add( 'update') \r\n        break\r\n      }\r\n    }\r\n  })\r\n}\r\n  \r\n\r\nconst swapTiles = async () => {\r\n  swapAmount(tiles)\r\n  if(findMatch())tiles.alternate = false\r\n  await animation.swap(tiles)\r\n  sound.swap.play()\r\n\r\n  if(!tiles.alternate){\r\n    swapImg(tiles)\r\n    await animateFound()\r\n  }else swapAmount(tiles)\r\n\r\n  resetTiles(tiles)\r\n  while(findMatch()){await animateFound()}\r\n}\r\n\r\n\r\nconst introSound = () => new Promise((resolve, _reject) =>{\r\n  setTimeout(()=>{\r\n  sound.getReady.play()\r\n  sound.getReady.on('end',() =>{\r\n    sound.gameStart.play()\r\n    sound.gameStart.on('end', ()=> resolve())\r\n  })\r\n  },1000)\r\n})\r\n\r\n\r\n\r\nconst gameOver = async() => {\r\n  clearTimer()\r\n  const tiles= []\r\n  const temp = document.getElementsByClassName('tile-container')\r\n  Array.from(temp).forEach(tile => tiles.push(tile.firstElementChild))\r\n\r\n  store.commit('pushCurrentScore')\r\n  store.commit('startGame', false)\r\n  store.commit('updateUser', {prop: 'scores', value: store.getters.getCrushState('currentScore')})\r\n\r\n  sound.timeUp.play()\r\n  sound.timeUp.on('end', function(){sound.gameOver.play()});\r\n\r\n  await animation.shrinkAndRotate(tiles)\r\n  store.commit('toggleModal', 'tryAgain')\r\n}\r\n\r\n\r\nconst lvlCompleted = async() =>{\r\n  clearTimer()\r\n  store.commit('pushCurrentScore')\r\n  store.commit('startGame', false)\r\n  \r\n  if(store.state.crush.currentLvL == store.state.crush.maxLvl){\r\n    sound.gameCompleted.play()\r\n    store.commit('toggleModal', 'Completed')\r\n    return\r\n  }\r\n  \r\n  const tiles= []\r\n  const temp = document.getElementsByClassName('tile-container')\r\n  Array.from(temp).forEach(tile => tiles.push(tile.firstElementChild))\r\n  sound.lvlComplete.play()\r\n  await animation.shrinkAndRotate(tiles)\r\n  store.commit('toggleModal', 'Continue')\r\n}\r\n\r\n\r\nconst countDown = () =>{\r\n  if(!intervalID && store.getters.getCrushState('playing'))\r\n    intervalID = setInterval(progressCountDown, 1500)\r\n}\r\n\r\n\r\nconst progressCountDown = async () => {\r\n  if(!store.getters.getPauseStatus && store.getters.getCrushState('playing')){\r\n    const target =  document.getElementById('progress-bar-container').firstElementChild\r\n    let time = parseInt(target.style.width)\r\n    time -= store.getters.getCrushObjState({obj: 'clock', prop: 'minus'})\r\n  \r\n    if(time < 20 && time > 0){\r\n      sound.warning.play()\r\n      target.classList.replace('bg-warning', 'bg-danger')\r\n      target.parentElement.classList.add('pulse')\r\n    }\r\n    else {\r\n      target.classList.replace('bg-danger', 'bg-warning')\r\n      target.parentElement.classList.remove('pulse')\r\n    }  \r\n    \r\n    store.commit('increasePlayTime')\r\n    if(time == 0)gameOver()\r\n    target.style.width = `${time}%`\r\n  }\r\n}\r\n\r\n\r\nexport const onClick = (e) => {\r\n  const square = e.target.closest('.coin') \r\n  if(tiles.source.square === null){\r\n    sound.select.play()\r\n    tiles.source.square = square\r\n    square.parentElement.classList.add('selected')\r\n    tiles.source.id = parseInt(square.getAttribute('id'))\r\n  }else setTiles(square)\r\n}\r\n\r\n\r\nexport const onSwipe = (direction, mouseEvent) =>{\r\n  if(tiles.source.square === null){\r\n    tiles.source.square = mouseEvent.srcElement.closest('.coin')\r\n    tiles.source.id = parseInt(tiles.source.square.getAttribute('id'))\r\n    tiles.source.square.parentElement.classList.add('selected')\r\n  }else if(tiles.dest.square !== null) return\r\n  \r\n  if(direction === 'top') setTiles(document.getElementById(tiles.source.id-8))\r\n  else if(direction === 'left')setTiles(document.getElementById(tiles.source.id-1))\r\n  else if(direction === 'right')setTiles(document.getElementById(tiles.source.id+1))\r\n  else if(direction === 'bottom')setTiles(document.getElementById(tiles.source.id+8))\r\n}\r\n\r\n\r\n/** \r\n  * @param {Array} tiles  array of elements that needs a needs value\r\n  * @param {boolean} addOn a boolean value that determines whether to add css-class invisible to tiles or not\r\n  * @desc loops through each tile and assign a random amount and corresponding css class\r\n**/\r\nexport const createTiles = (tiles, addOn = false) => {\r\n  const currency = store.getters.getCurrency\r\n  tiles.forEach(tile => {\r\n    try{\r\n      if(tiles.length > 64)throw new Error\r\n      tile.dataset.amount = 0\r\n      const rand =  Math.floor(Math.random() * currency.length)\r\n      tile.removeAttribute('class')\r\n      tile.setAttribute('data-amount', currency[rand].amount)\r\n      tile.classList.add('coin',currency[rand].css)\r\n      if(addOn)tile.classList.add('invisible')\r\n    }catch{tile.parentElement.classList.add('bg-white')}\r\n  })\r\n}\r\n\r\n\r\n/**\r\n  * @param {Array} grid\tempty array that will contains each game tile present on the board\r\n  * @desc   loops through document and find each element with class tile-container\r\n  *         add data-amount attr to each element \r\n  *         then push each element to the grid array \r\n**/\r\nexport const createGrid = (className) => {\r\n  const tiles = document.getElementsByClassName(className)\r\n  Array.from(tiles).forEach(tile =>{\r\n    tile.firstElementChild.setAttribute('data-amount', 0)\r\n    store.commit('setGrid', tile.firstElementChild)\r\n  })  \r\n}\r\n\r\nexport const createNewGame = async ()=>{\r\n  createTiles(store.getters.getCrushState('grid'))\r\n  await animation.grow(store.getters.getCrushState('grid'))\r\n  startGame(store.getters.getPauseStatus)\r\n}\r\n\r\n\r\nexport const toggleCoins = async () => { \r\n  const btn = document.getElementById('pauseBtn')\r\n\r\n  if(store.getters.getPauseStatus)\r\n    btn.innerText = 'resume'\r\n  else {\r\n    sound.welcomeBack.play()\r\n    btn.innerText = 'pause'\r\n  }\r\n\r\n  const targets = document.getElementsByClassName('tile-container')\r\n  Array.from(targets).forEach(tile => {\r\n    tile.firstElementChild.removeAttribute('class')\r\n    if(!store.getters.getPauseStatus)tile.firstElementChild.classList.add(...switchClassName(tile.firstElementChild.dataset.amount))\r\n    else tile.firstElementChild.classList.add('coin', 'penny')\r\n  })  \r\n}\r\n\r\n\r\n\r\nexport const startGame = async pause =>{ \r\n  if(!pause && !store.getters.getCrushState('playing')){\r\n    store.commit('startGame', true)\r\n    await introSound()\r\n    checkForMatch()  \r\n    countDown()\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const checkScores = async () => {\r\n  const level = lvlInfo()\r\n  const currentScore = store.getters.getCrushState('currentScore')\r\n  const highScore = store.state.user.highScore\r\n  \r\n  if(currentScore == level.goal)lvlCompleted()\r\n  if(currentScore > highScore)store.commit('updateUser', {prop:'highScore', value: currentScore})\r\n}\r\n\r\n\r\nexport const clearTimer = () =>{\r\n    clearInterval(intervalID)\r\n    intervalID = null\r\n    store.commit('startGame', false)\r\n}\r\n\r\n\r\n\r\nexport const restartGame = async() =>{\r\n  clearTimer()\r\n  store.commit('startGame', false)\r\n  store.commit('pushCurrentScore')\r\n  store.commit('pauseGame')\r\n  store.commit('madeFirstMove', false)\r\n  createNewGame()\r\n\r\n  const target= document.getElementById('progress-bar-container').firstElementChild\r\n  document.getElementById('pauseBtn').innerText = 'pause'\r\n  target.style.width = `100%`\r\n  store.state.crush.currentScore = 0\r\n\r\n}\r\n","<template>\r\n  <div class=\"d-flex justify-content-center w-100 h-75\">\r\n    <div id=\"myGrid\" class=\"d-flex flex-wrap justify-content-center justify-content-lg-start w-100 h-100 rounded rounded-6 transparent-dark\">\r\n      <div v-for=\"(tile, index) in getCrushState('gridSize') * getCrushState('gridSize')\" :key=\"index\" class=\"tile-container d-flex justify-content-center align-items-center\">\r\n        <div :id=\"index\" @click=\"onClick\" v-touch:swipe=\"onSwipe\">\r\n          <div class=\"w-100 h-100\"></div>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script setup>\r\n  import {mapGetters, mapMutations} from '@/libs/vuex'\r\n  import {onMounted,  watch,  onBeforeUnmount} from 'vue'\r\n  import \r\n  {\r\n    onClick, onSwipe,\r\n    createTiles, createGrid,\r\n    startGame, checkScores, createNewGame, clearTimer \r\n  } from '@/views/partials/math-crush/game-helpers'\r\n\r\n\r\n\r\n  const{resetGrid} = mapMutations()\r\n  const { getCrushState, getPauseStatus, getCurrentScore, getCrushCurrentLvL} = mapGetters()\r\n\r\n\r\n  onMounted(()=>{\r\n    createGrid('tile-container')\r\n    createTiles(getCrushState.value('grid'))\r\n  })\r\n\r\n  onBeforeUnmount(()=>{\r\n    clearTimer()\r\n    resetGrid()\r\n  })\r\n\r\n\r\n  watch(()=> getCurrentScore, () => checkScores(), {deep: true})\r\n  watch(() => getCrushCurrentLvL, () => createNewGame(),{ deep: true })\r\n  watch(() => getPauseStatus, () => startGame(getPauseStatus.value), { deep: true })\r\n</script>\r\n\r\n\r\n<style>\r\n  .tile-container{\r\n    width: 12.5%;\r\n    height: 12.5%;\r\n  }\r\n\r\n</style>","import script from \"./grid.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./grid.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./grid.vue?vue&type=style&index=0&id=95712dba&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div  class=\"col-12 col-lg justify-content-center  justify-content-lg-end w-100 h-100 \">\r\n    <Grid />\r\n\r\n    <div id=\"progress-bar-container\" class=\"progress mx-2 mx-sm-auto my-3 \">\r\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-warning \" role=\"progressbar\" style=\"width: 100%\"  aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n    </div>  \r\n          \r\n    <div class=\"d-flex align-items-center justify-content-center pt-3\">\r\n      <button :disabled=\"getPauseStatus\"  @click=\"[toggleModal('restart'), pauseGame(), toggleCoins()]\" type=\"button\" class=\"btn btn-danger mx-1 py-0 px-md-3 rounded-1 btn-highlight-none\">Restart</button>\r\n      <button  @click=\"[pauseGame(), toggleCoins()]\" id=\"pauseBtn\" type=\"button\" class=\"btn btn-warning text-white mx-1 py-0 px-md-3 btn-highlight-none\">Pause</button>\r\n      <button :disabled=\"getPauseStatus\" @click=\"showHint\" type=\"button\" class=\" d-none d-lg-block btn btn-success mx-1 py-0 px-md-3 btn-highlight-none\">Hints</button>\r\n      <button :disabled=\"getPauseStatus\" @click=\"[toggleModal('scores'), pauseGame(), toggleCoins()]\" type=\"button\" class=\"btn btn-light mx-1 py-0 px-md-3 btn-highlight-none\">Scores</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { mapMutations, mapGetters} from '@/libs/vuex'\r\n  import Grid from '@/components/misc/grid.vue'\r\n  import {toggleCoins} from '@/views/partials/math-crush/game-helpers'\r\n\r\n  const {toggleModal, pauseGame} = mapMutations() \r\n  const {getPauseStatus} = mapGetters()\r\n\r\n\r\n  const flip = () => {\r\n    const target = document.getElementsByClassName('hint')\r\n    anime({\r\n      targets: target,\r\n      scale: [{value:1}, {value:1.3},{value:1, delay: 250} ],\r\n      rotateY: {value: \"+=180\", delay: 200},\r\n      easing: \"easeInOutSine\",\r\n      duration: 400,\r\n    })\r\n  }\r\n\r\n  const showHint = () =>{\r\n    flip()\r\n    setTimeout(()=> flip(), 10000)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n\r\n.pulse{\r\n    box-shadow: 0 0 0 0 rgba(220, 53, 69, 1);\r\n    animation: pulse-red 2s infinite;\r\n  }\r\n    \r\n  @keyframes pulse-red {\r\n    0% {box-shadow: 0 0 0 0 rgba(255, 53, 69, 0.7);}\r\n    70% {box-shadow: 0 0 0 10px rgba(255, 53, 69, 0);}\r\n    100% {box-shadow: 0 0 0 0 rgba(255, 53, 69, 0);}\r\n  }\r\n\r\n\r\n</style>","import script from \"./game-layout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./game-layout.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./game-layout.vue?vue&type=style&index=0&id=2947d1dd&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\kwesi\\\\Desktop\\\\production apps\\\\src\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2947d1dd\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"d-flex align-items-center justify-content-center h-100 bg-dark\">\r\n    <div class=\"d-flex flex-column justify-content-center align-items-center h-75 pb-5 pb-sm-0\">\r\n      <img src=\"@/assets/img/icon-sm-white.png\" alt=\"logo\">\r\n      <h1 class=\"text-white text-center mt-4  fs-4\">Loading</h1>\r\n      <img src=\"@/assets/img/ajax-loader-white.gif\" class=\"my-4\" alt=\"loader\">\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script setup></script>\r\n\r\n<style scoped>\r\n  .loading{\r\n    height: 100%;\r\n    /* background-repeat: no-repeat; */\r\n    /* background-image: url('@/assets/img/loading.jpg'); */\r\n    background-size: cover;  \r\n    filter: blur(2px);\r\n    -webkit-filter: blur(2px);\r\n  }\r\n\r\n</style>","import { render } from \"./loading.vue?vue&type=template&id=3b33e664&scoped=true\"\nconst script = {}\n\nimport \"./loading.vue?vue&type=style&index=0&id=3b33e664&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\kwesi\\\\Desktop\\\\production apps\\\\src\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3b33e664\"]])\n\nexport default __exports__","<template>\r\n  <div class=\" d-none d-lg-block d-flex col-0 col-lg-3  me-3 me-xl-4 h-80 d-flex flex-column align-items-center\">\r\n    <div class=\"d-flex justify-content-end hint-container h-100 w-100\">\r\n      <div class=\"h-75  hint\">\r\n        <div class=\"front bg-dark\">\r\n          <div class=\"h-100 w-100 text-white\"></div>\r\n        </div>\r\n        <div class=\"back\">\r\n          <div class=\"d-flex flex-column transparent-dark w-100 h-100  \">\r\n            <h3 class=\"text-white fs-5 fw-bold text-center my-3\">Hints</h3>\r\n\r\n            <div id=\"Combinations\" class=\"d-flex flex-column h-100  overflow-auto\"> \r\n              <div v-for=\"(combinations, index) in  getHints(getCrushCurrentLvL-1).hints\" :key=\"index\"  class=\"d-flex align-items-center flex-grow-1 px-2\">\r\n                <div v-for=\"(tile, index) in combinations\" :key=\"index\" class=\"d-flex coin-container\">\r\n                  <div class=\"coin hints\" :class=\"tile\">\r\n                    <div class=\"tile\"></div>\r\n                  </div>\r\n                </div> \r\n              </div> \r\n            </div> \r\n\r\n          </div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { mapGetters} from '@/libs/vuex'\r\n  const {getHints, getCrushCurrentLvL} = mapGetters()\r\n\r\n \r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .tile{\r\n    width: 100%;\r\n    height: 100%;   \r\n  }\r\n\r\n\r\n\r\n\r\n  .coin-container{\r\n    width: 18%;\r\n    height: 100%;\r\n    max-height: 44px;\r\n  }\r\n\r\n  .hint{\r\n    position: relative;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    width: 90%;\r\n    min-width: 195px;\r\n    max-width: 255px;\r\n    transform-style: preserve-3d;\r\n  }\r\n\r\n  .front, .back {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    justify-content: center;\r\n    align-content: center;\r\n    backface-visibility: hidden;\r\n  }\r\n\r\n  .front {\r\n    background-repeat: no-repeat;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .front > div{\r\n    background-image: url('@/assets/img/icon-sm-white.png');\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .back {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: rotateY(180deg);\r\n    color: #fff;\r\n    -webkit-transform: rotateY(180deg);\r\n    -moz-transform: rotateY(180deg);\r\n    -ms-transform: rotateY(180deg);\r\n    -o-transform: rotateY(180deg);\r\n  }\r\n\r\n  #Combinations::-webkit-scrollbar {\r\n    width: 7px;\r\n  }\r\n\r\n  /* Track */\r\n  #Combinations::-webkit-scrollbar-track {\r\n    background: rgb(187, 185, 185); ;\r\n  }\r\n\r\n  /* Handle*/\r\n  #Combinations::-webkit-scrollbar-thumb, #Combinations::-webkit-scrollbar-thumb:hover {\r\n    background: var(--bs-warning);\r\n  }\r\n\r\n</style>","import script from \"./hints-card.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./hints-card.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./hints-card.vue?vue&type=style&index=0&id=e3ec4d8a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\kwesi\\\\Desktop\\\\production apps\\\\src\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e3ec4d8a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"d-flex justify-content-between align-items-center bg-white shadow-sm p-2 p-md-3  my-3 w-75 w-lg-60\">\r\n    <p class=\"mb-0\">Level: <span class=\"text-success fw-bold\">{{getCrushState('currentLvL')}}</span></p>\r\n    <p class=\"mb-0 text-muted\">{{getCrushState('currentScore')}} / <span class=\"text-success\">{{game.goal}} </span></p>\r\n    <p class=\"mb-0\">Target: <span class=\"text-danger fw-bold\">{{game.target}}</span></p>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup> \r\n  import {mapGetters} from '@/libs/vuex'\r\n  import { onMounted,  reactive, watch} from 'vue'\r\n\r\n  const {getCrushState,  getCrushLvlState,  getCrushCurrentLvL} = mapGetters()\r\n  \r\n  const game = reactive({\r\n    goal:null, \r\n    target: null,\r\n  })\r\n\r\n\r\n  onMounted(()=>init())\r\n  watch(() => getCrushCurrentLvL, () => init(),{ deep: true })\r\n\r\n  const init= () =>{\r\n    const lvl = getCrushState.value('currentLvL')\r\n    game.goal  = getCrushLvlState.value(lvl-1).goal\r\n    game.target  =  getCrushLvlState.value(lvl-1).target\r\n  }\r\n</script>","import script from \"./game-header.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./game-header.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div  class=\"h-100\">\r\n    <Loader v-if=\"game.loading\"/>\r\n    <div v-else class=\"game-container d-flex flex-column align-items-center flex-grow-1 mb-2 h-100\"> \r\n      <GameHeader />\r\n      <div class=\"row align-self-end d-flex justify-content-center w-100 h-100 px-0 mx-1\">\r\n        <div class=\"d-none d-lg-block d-flex col-0 col-lg-2\"></div>\r\n        <Game />\r\n        <Hints />        \r\n      </div><!-- row ends here -->\r\n    </div><!--game-container ends here -->\r\n  </div><!-- root div ends here -->\r\n</template>\r\n\r\n\r\n\r\n<script setup>\r\n  import {mapMutations, mapGetters,  mapActions} from '@/libs/vuex'\r\n  import {reactive, onMounted, onBeforeUnmount} from 'vue'\r\n\r\n  //Components\r\n  import Game from './game-layout.vue'\r\n  import Loader from '@/components/misc/loading.vue'\r\n  import Hints from '@/components/cards/hints-card.vue'\r\n  import GameHeader from '@/components/misc/game-header.vue'\r\n\r\n  const {startGame, toggleModal,  pushCurrentScore,  toggleSideNav} = mapMutations()\r\n  const {saveScore} = mapActions()\r\n\r\n  const game = reactive({\r\n    loading: true,               //👈 determines if the loading screen currently active\r\n    loadTime: 4500,              //👈 the amount of time in milliseconds the loading screen is active for\r\n  })\r\n  \r\n\r\n  onMounted(async()=> {\r\n    logOutInnerText('Quit Game')\r\n    game.loading = await load(game.loadTime)\r\n    toggleModal('rules')\r\n  })\r\n\r\n  onBeforeUnmount(async()=>{\r\n    startGame(false)\r\n    pushCurrentScore()\r\n    await saveScore()\r\n    logOutInnerText('logout')\r\n    toggleSideNav(true) \r\n  })\r\n\r\n\r\n  const logOutInnerText = innerText =>{\r\n    const btn = document.getElementById('logOutBtn')\r\n    btn.innerText = innerText\r\n  }\r\n\r\n\r\n  const load = time => new Promise((resolve, _reject) =>setTimeout(() => resolve(!game.loading), time))\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n  .game-container{\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url('@/assets/img/jungle-background.webp');\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n  }\r\n\r\n  \r\n\r\n</style>","import script from \"./main-layout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./main-layout.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./main-layout.vue?vue&type=style&index=0&id=2c627e7c&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\kwesi\\\\Desktop\\\\production apps\\\\src\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2c627e7c\"]])\n\nexport default __exports__"],"names":["mapGetters","store","useStore","Object","fromEntries","keys","getters","map","getter","computed","mapMutations","_mutations","mutation","value","commit","mapActions","_actions","action","dispatch","growAndExplode","async","transition","anime","timeline","targets","tiles","easing","add","scale","duration","complete","sound","forEach","tile","removeAttribute","classList","finished","drop","height","document","querySelector","getBoundingClientRect","Promise","all","down","dataset","direction","endDelay","translateY","grow","delay","begin","remove","shrinkAndRotate","rotate","swap","source","square","parentElement","width","dest","id","slideUp","slideLeft","slideRight","slideDown","distance","alternate","translateX","animation","intervalID","matchFound","invalidMove","swapAmount","temp","amount","swapImg","destClass","sourceClass","replace","setTiles","destID","parseInt","getAttribute","validMoves","moves","valid","includes","swapTiles","checkForMatch","findMatch","animateFound","lvlInfo","currentLvl","levels","total","data","grid","index","target","addPoints","streak","getTilesByClassName","className","reverse","arr","getElementsByClassName","Array","from","push","updateClass","switchClassName","css","resetTiles","removeAnimation","addHoverCss","i","threeRows","fourRows","fiveRows","markedArr","replaceArr","validArr","markedTiles","updateTilesAmount","updateArr","invalidArr","createTiles","ID","Set","calculateDown","tileID","tileValue","setAttribute","gridTop","currentID","introSound","resolve","_reject","setTimeout","gameOver","clearTimer","firstElementChild","prop","lvlCompleted","countDown","setInterval","progressCountDown","getElementById","time","style","obj","onClick","e","closest","onSwipe","mouseEvent","srcElement","addOn","currency","length","Error","rand","Math","floor","random","createGrid","createNewGame","startGame","toggleCoins","btn","innerText","pause","checkScores","level","currentScore","highScore","goal","clearInterval","restartGame","resetGrid","getCrushState","getPauseStatus","getCurrentScore","getCrushCurrentLvL","onMounted","onBeforeUnmount","watch","deep","__exports__","toggleModal","pauseGame","flip","rotateY","showHint","class","_createElementVNode","src","_imports_0","alt","_imports_1","_hoisted_2","_createElementBlock","_hoisted_3","script","render","getHints","getCrushLvlState","game","reactive","init","lvl","pushCurrentScore","toggleSideNav","saveScore","loading","loadTime","logOutInnerText","load"],"sourceRoot":""}